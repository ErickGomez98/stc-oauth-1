AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "STC oAuth Server Template Format"

Parameters:
  EnvironmentType:
    Description: The environment type
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - staging
      - prod
    ConstraintDescription: must be a dev, qa, staging or prod
  STCAuthBucket:
    Description: Location of all the necessary stack file resources
    Type: String
    Default: stc-oauth-dev-artifacts
  ApiSpecFile:
    Description: Name of the api documentation spec file
    Type: String
    Default: s3://stc-oauth-dev-artifacts/openapi.yml

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "stc-oAuth-api-${EnvironmentType}"
      Description: "Authorization API for STC Partners"
      Cors: "'*'"
      TracingEnabled: true
      EndpointConfiguration:
        Type: "REGIONAL"
      StageName: !Ref EnvironmentType
      DefinitionBody:
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: !Ref ApiSpecFile
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          CacheDataEncrypted: false
          CachingEnabled: false
          DataTraceEnabled: true
          LoggingLevel: INFO
          MetricsEnabled: true
  TestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/stc-oauth/test/get
      Handler: index.handler
      Runtime: nodejs12.x
      Events:
        Test:
          Type: Api
          Properties:
            Path: /test
            Method: get
            RestApiId:
              Ref: Api
            Auth:
              Authorizer: NONE
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/stc-oauth/auth/get
      Handler: index.handler
      Runtime: nodejs12.x
      Events:
        Test:
          Type: Api
          Properties:
            Path: /auth
            Method: get
            RestApiId:
              Ref: Api
            Auth:
              Authorizer: NONE
  TokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/stc-oauth/token/get
      Handler: index.handler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        GetUserByCognitoID:
          Type: Api
          Properties:
            Path: /token
            Method: get
            RestApiId:
              Ref: Api
            Auth:
              Authorizer: NONE
  TokenTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Token
      AttributeDefinitions:
        - AttributeName: Token
          AttributeType: S
      KeySchema:
        - AttributeName: Token
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ExpirationTime
        Enabled: true
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
